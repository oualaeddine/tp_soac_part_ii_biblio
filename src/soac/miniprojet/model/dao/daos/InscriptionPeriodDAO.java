package soac.miniprojet.model.dao.daos;
// Generated 7 janv. 2020 11:56:55 by Hibernate Tools 5.4.7.Final


import soac.miniprojet.model.beans.InscriptionPeriod;
import soac.miniprojet.model.dao.DAO;
import soac.miniprojet.model.dao.DAOInterface;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.LinkedList;

/**
 * InscriptionPeriod generated by hbm2java
 */
public class InscriptionPeriodDAO extends DAO implements DAOInterface {

    @Override
    public Object getById(int id) {
        ResultSet result;
        try {
            result = statement.executeQuery("SELECT * FROM biblio_insc_period WHERE id=" + id);
            if (result.next()) {
                InscriptionPeriod inscriptionPeriod = new InscriptionPeriod();
                inscriptionPeriod.setId(result.getInt("id"));
                inscriptionPeriod.setEndInscDate(result.getDate("end_insc_date"));
                inscriptionPeriod.setStartInscDate(result.getDate("start_insc_date"));
                return inscriptionPeriod;
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return null;
    }

    @Override
    public boolean deleteById(int id) {
        return deleteById(id, "inscription_period");
    }


    @Override
    public boolean update(Object object) {

        InscriptionPeriod inscriptionPeriod = (InscriptionPeriod) object;
        try {
            statement.execute("UPDATE biblio_insc_period SET " +
                    "end_insc_date = '" + new SimpleDateFormat("yyyy-MM-dd").format(inscriptionPeriod.getEndInscDate()) + "'," +
                    "start_insc_date = '" + new SimpleDateFormat("yyyy-MM-dd").format(inscriptionPeriod.getStartInscDate()) + "'" +

                    " WHERE biblio_insc_period.id=" + inscriptionPeriod.getId() + ";");
            System.out.println("edited");
            return true;
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return false;
    }

    @Override
    public boolean add(Object object) {
        InscriptionPeriod inscriptionPeriod = (InscriptionPeriod) object;
        try {
            statement.execute("INSERT INTO biblio_insc_period (`start_insc_date`,`end_insc_date`,`year`) VALUES(" +
                    "'" + new SimpleDateFormat("yyyy-MM-dd").format(inscriptionPeriod.getStartInscDate()) + "'," +
                    "'" + new SimpleDateFormat("yyyy-MM-dd").format(inscriptionPeriod.getEndInscDate()) + "'," +
                    "'" + inscriptionPeriod.getYear() + "'" +
                    ");");
            return true;
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return false;
    }

    @Override
    public LinkedList<InscriptionPeriod> getAll() {
        LinkedList<InscriptionPeriod> list = new LinkedList<>();
        ResultSet result;
        try {
            result = statement.executeQuery("SELECT * FROM biblio_insc_period;");
            while (result.next()) {
                InscriptionPeriod inscriptionPeriod = new InscriptionPeriod();
                inscriptionPeriod.setId(result.getInt("id"));
                inscriptionPeriod.setStartInscDate(result.getDate("start_insc_date"));
                inscriptionPeriod.setEndInscDate(result.getDate("end_insc_date"));
                list.add(inscriptionPeriod);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return list;
    }

    public int countAll() {
        ResultSet result;
        try {
            result = statement.executeQuery("SELECT count(id) FROM biblio_insc_period;");
            if (result.next()) {
                return result.getInt("count(id)");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return 0;
    }

    public InscriptionPeriod GetLastPeriode() {
        try {
            ResultSet result = statement.executeQuery("SELECT * FROM biblio_insc_period ORDER BY id DESC LIMIT 1;");
            ;
            if (result.next()) {
                InscriptionPeriod ip = new InscriptionPeriod();
                ip.setId(result.getInt("id"));
                ip.setStartInscDate(result.getDate("start_insc_date"));
                ip.setEndInscDate(result.getDate("end_insc_date"));
                return ip;
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return null;
    }
}
